@use '../../_foundation/global' as g;

//----------------------------------------------------------------
//ベースで利用するリンクコンポーネント
//----------------------------------------------------------------
.img-ov {
  overflow: clip;

  img,
  video {
    display: inline-block;
    object-fit: cover;
    width: 100%;
    height: 100%;
    transition: transform 0.3s;
  }
}

a {
  @include g.hover {
    .img-ov img,
    .img-ov video {
      transform: scale(1.05);
    }
  }
}

.c-card {
  &:has(.c-card-mainLink:hover) {
    .img-ov img {
      transform: scale(1.05);
    }
  }
}

.c-linelink__txt {
  display: inline;
  position: relative;
  background-position: right bottom 0px;
  background-image: linear-gradient(90deg, currentcolor, currentcolor);
  background-repeat: no-repeat;
  background-size: 100% 1px;
  transition: background-size 0.32s ease;
  animation-fill-mode: forwards;
  line-height: 1.25;
  letter-spacing: normal;
  @media (max-width: g.$size-sp) {
    background-size: 100% 0.5px;
  }
}

.c-linelink {
  .c-linelink__txt.is-animated {
    animation: linelink 0.4s g.$easing-out_t2 forwards;

    @media (max-width: g.$size-sp) {
      animation: linelinkSp 0.4s g.$easing-out_t2 forwards;
    }
  }

  &.red {
    color: #e61d0d;
  }

  &.has-icon {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .c-linelink__icon {
    display: inline-block;
    height: fit-content;

    svg {
      display: block;
    }

    &.arw {
      svg {
        width: 1rem;
        aspect-ratio: 1/1;
        stroke: currentColor;
      }
    }
    &.pdf {
      svg {
        width: 2.4rem;
        aspect-ratio: 2/1;
      }
    }
  }
}

.c-linelink--hidden {
  .c-linelink__txt {
    background-size: 0% 1px;
  }
  .c-linelink__txt.is-animated {
    background-size: 100% 1px;
    background-position: left bottom 0px;
  }
}

//外部リンク
.c-blank {
  .c-blank-icon svg {
    aspect-ratio: 1/1;
    width: 1rem;
    margin-left: 0.2rem;
    stroke: currentColor;
    stroke-width: 0.5px;
  }
}

@media (max-width: g.$size-sp) {
  .c-blank {
    .c-blank-icon svg {
      margin-left: 0.1rem;
      width: 0.9rem;
      stroke-width: 0.5px;
    }
  }
}

//----------------------------------------------------------------
//ベースで利用するリンクコンポーネントここまで
//----------------------------------------------------------------

.c-btn {
  position:fixed;
  border: 1px solid currentColor;
  border-radius: 100svh;
  padding: 0.8rem 1.7rem 0.7rem 1.6rem;
  transition:all 1.25s g.$easing-out_t3;
  background-color: black;

  @include g.hover{
    background-color: #E61D0D;
    border-color:transparent;
  }
}

.c-btn__inner {
  display: flex;
  align-items: center;
  gap: 0.2rem;
}

.c-btn__icon {
  width: 1.6rem;
  height: 1.6rem;
  translate:0 -.2rem;
  display: inline-block;
}

.c-split-link {
  line-height: 1;
  position: relative;
  overflow: clip;
  display: inline-block;
  .js-split-text {
    display: inline-block;
    &.red {
      position: absolute;
      inset: 0;
      translate: 0 100%;
      color: #e61d0d;

      .l-footer &{
        color:inherit;
      }
    }
  }
  .char {
    display: inline-block;
    transition: translate 0.25s;
  }

  // 文字数分のループを回す例（10文字の場合）
  @for $i from 1 through 20 {
    .char:nth-child(#{$i}) {
      transition-delay: #{$i * 0.01}s;
    }
  }

  @include g.hover {
    .char {
      translate: 0 -100%;
    }
  }
}

.c-split-link__wrapper{
  .c-btn__txt--wrapper{
    position: relative;
    overflow: clip;
    display: inline-block;
    line-height: 1;

    .js-split-text {
      display: inline-block;
      &.red {
        position: absolute;
        inset: 0;
        translate: 0 100%;
      }
    }
    .char {
      display: inline-block;
      transition: translate 0.25s;
    }
  
    // 文字数分のループを回す例（10文字の場合）
    @for $i from 1 through 20 {
      .char:nth-child(#{$i}) {
        transition-delay: #{$i * 0.01}s;
      }
    }

  }
  @include g.hover {
    .char {
      translate: 0 -100%;
    }
  }
}
