/* empty css     */(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function i(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(e){if(e.ep)return;e.ep=!0;const r=i(e);fetch(e.href,r)}})();class c{constructor(t,i){this.els=document.querySelectorAll(t),!(innerWidth<1023)&&(i&&(this.generateClassName=i),this.els&&this.els.forEach(s=>{this.chars=s.innerText.trim(),this.concatStr="",s.innerHTML=this._splitText()}))}_splitText(){for(let t of this.chars)t=t.replace(" ","&nbsp;"),this.generateClassName?this.concatStr+=`<span class="${this.generateClassName}">${t}</span>`:this.concatStr+=`<span>${t}</span>`;return this.concatStr}}class l{constructor(){}render(){innerWidth>1023&&new c(".js-split-text","char")}}const a=new l;a.render();
